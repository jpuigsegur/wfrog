#summary Usage and Installation guide
#labels Phase-Support,Featured

<wiki:toc/>

= Architecture =

As of wfrog 0.1, three processes are involved:

   # The Firebird database
   # The Logger. Reads data from the USB station, logs data into the database. It also maintains a XML file with current conditions.
   # The Renderer. Reads data from the database and/or the XML file and renders it on a web page, either served by an internal web server or sent on a FTP site.

= Installation Guide =

== Needed dependencies ==

The dependencies are of two types:
   * Binary packages. We show here how to install them on a debian-based distribution using apt-get.
   * Python eggs installed using 'easy_install' from pypi setuptools. 

*Binaries*
{{{
sudo apt-get install python2.6             # Python 2.6 or 
#sudo apt-get install python2.5            # Python 2.5
sudo apt-get install python-setuptools     # Python setup tools for `easy_install`
sudo apt-get install firebird2.1-super     # Firebird database 2.1 or
#sudo apt-get install firebird2.0-super    # Firebird database 2.0 
sudo apt-get install python-kinterbasdb    # Python binding for firebird
}}}

*Python eggs*
{{{
sudo easy_install pyusb                    # USB
sudo easy_install yaml                     # Config files
sudo easy_install pygooglechart            # Chart rendering
sudo easy_install cheetah                  # Template engine
sudo easy_install webcolors                # Color names for chart
sudo easy_install lxml                     # XML serialization 
}}}

== Download ==

  * Download the wfrog distribution from the [http://code.google.com/p/wfrog/downloads/list download page] (as soon as 0.1 is released) or [http://code.google.com/p/wfrog/source/checkout checkout from subversion].

== Prepare Database ==

=== Firebird 2.0 ===

==== Start Database Server ====

{{{
sudo mkdir -p /var/run/firebird/2.0
sudo dpkg-reconfigure firebird2.0-super
}}}

==== Create Database and Tables ====

{{{
sudo mkdir /var/lib/firebird/2.0/data
/usr/lib/firebird/2.0/bin/isql -u sysdba -p masterkey
SQL> create database 'localhost:/var/lib/firebird/2.0/data/wfrog.db';
SQL> IN db.sql;
}}}

= User Manual =

== Logger ==

==== Configuration ====

  * Adapt values in `wflogger/src/WxLogger.cfg` (use the database URL you create above)

==== Starting the Logger ====

{{{
cd wflogger/src
python WxLogger.py
}}}

== Renderer ==

=== Configuration ===

  * Adapt values in `wfrender/config/wfrender.yaml`

=== Starting the Renderer ===

{{{
cd wfrender
python wfrender.py
}}}

=== Internal Web-Server ===

The default configuration starts an internal web-server on port 8080.

=== FTP ===

To send the generated page periodically to a FTP site instead of serving it in the internal web-server, replace the following part of the configuration file:

{{{
renderer: !http
    root: !template
}}}

with 

{{{
renderer: !scheduler
    period: 120  # in seconds
    renderer: !ftp
        host: myhost.mydomain.com            # where to send the file
        username: myusername
        password: mypassword
        renderers:
            wfrender.html: !file             # The remote filename
                path: /tmp/wfrender.html     # The local one
                renderer: !template         
}}}

And indent the configuration below so that it is one level below the `render: !template` line.

=== Getting Help ===

The yaml !elements used in the configuration file are described in the builtin help:

{{{
python wfrender.py --help                # General help
python wfrender.py -L                    # List and descriptions of !elements
python wfrender.py -H ELEMENT            # Help on a specific element
}}}