#summary Specification of WESTEP, an XML protocol for weather station events.
#labels Phase-Design

= Introduction =

Consumer weather stations become wide-spread and in this area the software bundled with weather is often proprietary, limited to an operating system and provides poor support for integrating with other software.

On an other hand, independent software providers work on weather software gaining popularity because they pay attention to what the users need (other features, other OS, open-source license, ...). However, each of them need to develop and test their own implementation of weather station drivers or integrate an existing one with the effort of adapting it to their model.

This document specifies an XML language for events that a weather station typically issues. This allows for software providers to integrate their software with a wider range of weather station models, provided it exists a WESTEP driver for them. A WESTEP driver is a piece of software receiving data from the weather station and transforming it to XML events.

Station vendors also have benefits in providing WESTEP drivers. They open their users to more choice and acceptance of their products.

= Principles =

WESTEP (WEather STation Event Protocol) relies on two layers:
  * *WESTEP Format*. This is the XML language itself.
  * *WESTEP Transport*. This is how the XML messages are exchanged accross software components.

We call 'producer' the process sending the event. It is usually a driver, but can also be an intermediate (routing, transformation, ...).

We call 'consumer' the process receiving the event. It is usually a weather software like a datalogger, but can also be an intermediate (routing, transformation, ...).

= WESTEP Format =

The following annotated XML schema fully describes the XML format.

*TBD*

== Extensions ==

WESTEP supports proprietary extensions on the form of additional event types and additional elements anywhere in the standard event messages, provided that they appear in a distinct namespace.

== Restrictions to the XML standards ==

The following restrictions apply:
 * XML messages MUST use the standard WESTEP schema as default namespace and not use the prefixed form. This allows for easier integration and optimizations. Consumers sticking to the standard can drop all messages and elements having a namespace prefix, since they always are extensions.
 * When using streaming transports (see below), the XML messages MUST be terminated by one empty line and not contains empty lines themselves.

= WESTEP Transport =

In the current version of the specification, the following transports are specified:

  * *STDIO Transport*
  * *HTTP Transport*

== STDIO Transport ==

With this transport, the producer and consumer processes usually run on the same machine and communicate through OS pipes. The producers issues a stream of XML messages terminated by an empty line on its standard output. The consumer receives this stream on its standard input.

The following must be observed:
 * The XML messages MUST not contain empty lines. This is a restriction over XML.
 * The definition 'empty line' is OS-specific.

== HTTP Transport ==

With this transport, the event producer process performs a HTTP POST request on the event consumer process. The payload of the POST request is the XML message. 