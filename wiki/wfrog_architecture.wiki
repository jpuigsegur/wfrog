#summary Description of wfrog architecture.

= Introduction =

wfrog is a lightweight headless simple station logger.


= Details =



It is structured in 4 components:



1) driver

- reads / retrieves / receives / etc. data from the weather station and sends part of it (external temperature & humidity, wind, station pressure and rain) to the logger via messages. Optionally the driver can produce an xml file with the current conditions as would be seen on the station console.



2) logger

- Receives the data from the driver and every n minutes writes a new record to the database and then sends a signal to the renderer to notify new data available.



3) database

- Use real multiuser DBMS, allowing data query from other nodes, hot backups, etc.

- Keep SQL sentences standard so that most DBMS can be used.

- Keep the database simple: 1 table with one record every n minutes (by default 15) plus 1 index.

- The database units should be metric.



3) renderer & uploader

- Produces any file (html / xml / txt / graphs / etc.) requested by the user containing current data, daily/monthly/yearly aggregates, etc. etc. The renderer obtains the data by accessing to the database.



Ideally 1,2 and 4 should be separate OS processes (3 will always be), with separate configs, etc. (this implies using some os mechanism like named pipes, etc. to communicate, which is not that difficult). The 2.6 python module multithreading offers interesting features, but I agree that we should stay on 2.5 if 2.6 is still not available on debian.

